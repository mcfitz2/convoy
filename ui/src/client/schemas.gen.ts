// This file is auto-generated by @hey-api/openapi-ts

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $Machine = {
    properties: {
        vin: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Vin'
        },
        meter_unit: {
            type: 'string',
            title: 'Meter Unit'
        },
        make: {
            type: 'string',
            title: 'Make'
        },
        model: {
            type: 'string',
            title: 'Model'
        },
        year: {
            type: 'integer',
            title: 'Year'
        },
        image: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Image'
        },
        purchase_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Purchase Date'
        },
        meter_readings: {
            items: {
                '$ref': '#/components/schemas/MeterReading'
            },
            type: 'array',
            title: 'Meter Readings',
            default: []
        },
        tasks: {
            items: {
                '$ref': '#/components/schemas/Task'
            },
            type: 'array',
            title: 'Tasks',
            default: []
        },
        current_meter_reading: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Current Meter Reading',
            default: 0
        },
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        id: {
            type: 'string',
            title: 'Id',
            examples: ['5f85f36d6dfecacc68428a46', 'ffffffffffffffffffffffff'],
            example: '5f85f36d6dfecacc68428a46'
        }
    },
    type: 'object',
    required: ['meter_unit', 'make', 'model', 'year'],
    title: 'Machine'
} as const;

export const $MeterReading = {
    properties: {
        value: {
            type: 'number',
            title: 'Value'
        },
        timestamp: {
            type: 'string',
            format: 'date-time',
            title: 'Timestamp'
        }
    },
    type: 'object',
    required: ['value'],
    title: 'MeterReading'
} as const;

export const $Part = {
    properties: {
        id: {
            type: 'string',
            title: 'Id',
            examples: ['5f85f36d6dfecacc68428a46', 'ffffffffffffffffffffffff'],
            example: '5f85f36d6dfecacc68428a46'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        link: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Link'
        }
    },
    type: 'object',
    required: ['name'],
    title: 'Part'
} as const;

export const $Supply = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        unit: {
            type: 'string',
            title: 'Unit'
        },
        quantity_on_hand: {
            type: 'number',
            title: 'Quantity On Hand',
            default: 0
        },
        parts: {
            items: {
                '$ref': '#/components/schemas/Part'
            },
            type: 'array',
            title: 'Parts'
        },
        machine_id: {
            anyOf: [
                {
                    type: 'string',
                    examples: ['5f85f36d6dfecacc68428a46', 'ffffffffffffffffffffffff'],
                    example: '5f85f36d6dfecacc68428a46'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Machine Id'
        },
        id: {
            type: 'string',
            title: 'Id',
            examples: ['5f85f36d6dfecacc68428a46', 'ffffffffffffffffffffffff'],
            example: '5f85f36d6dfecacc68428a46'
        }
    },
    type: 'object',
    required: ['name', 'unit', 'parts'],
    title: 'Supply'
} as const;

export const $Task = {
    properties: {
        id: {
            type: 'string',
            title: 'Id',
            examples: ['5f85f36d6dfecacc68428a46', 'ffffffffffffffffffffffff'],
            example: '5f85f36d6dfecacc68428a46'
        },
        description: {
            type: 'string',
            title: 'Description'
        },
        time_interval: {
            type: 'integer',
            title: 'Time Interval'
        },
        meter_interval: {
            type: 'number',
            title: 'Meter Interval'
        },
        recurring: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Recurring',
            default: false
        },
        notes: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Notes'
        },
        supplies: {
            items: {
                '$ref': '#/components/schemas/TaskSupply'
            },
            type: 'array',
            title: 'Supplies',
            default: []
        },
        completed: {
            type: 'boolean',
            title: 'Completed',
            default: false
        },
        completed_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Completed Date'
        },
        completed_meter_reading: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Completed Meter Reading'
        },
        due_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Due Date'
        },
        due_meter_reading: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Due Meter Reading'
        },
        due_meter_ago: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Due Meter Ago'
        },
        due_days_ago: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Due Days Ago'
        }
    },
    type: 'object',
    required: ['description', 'time_interval', 'meter_interval'],
    title: 'Task'
} as const;

export const $TaskCreate = {
    properties: {
        description: {
            type: 'string',
            title: 'Description'
        },
        time_interval: {
            type: 'integer',
            title: 'Time Interval'
        },
        meter_interval: {
            type: 'number',
            title: 'Meter Interval'
        },
        recurring: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Recurring',
            default: false
        },
        notes: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Notes'
        },
        supplies: {
            items: {
                '$ref': '#/components/schemas/TaskSupply'
            },
            type: 'array',
            title: 'Supplies',
            default: []
        },
        initial_due_meter: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Initial Due Meter'
        },
        initial_due_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Initial Due Date'
        }
    },
    type: 'object',
    required: ['description', 'time_interval', 'meter_interval'],
    title: 'TaskCreate'
} as const;

export const $TaskSupply = {
    properties: {
        id: {
            type: 'string',
            title: 'Id',
            examples: ['5f85f36d6dfecacc68428a46', 'ffffffffffffffffffffffff'],
            example: '5f85f36d6dfecacc68428a46'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        unit: {
            type: 'string',
            title: 'Unit'
        },
        quantity_required: {
            type: 'number',
            title: 'Quantity Required',
            default: 0
        },
        supply_id: {
            type: 'string',
            title: 'Supply Id',
            examples: ['5f85f36d6dfecacc68428a46', 'ffffffffffffffffffffffff'],
            example: '5f85f36d6dfecacc68428a46'
        },
        parts: {
            items: {
                '$ref': '#/components/schemas/Part'
            },
            type: 'array',
            title: 'Parts'
        }
    },
    type: 'object',
    required: ['name', 'unit', 'supply_id', 'parts'],
    title: 'TaskSupply'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;